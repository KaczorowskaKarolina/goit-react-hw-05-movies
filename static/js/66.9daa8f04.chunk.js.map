{"version":3,"file":"static/js/66.9daa8f04.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/MovieDetails.jsx","components/Reviews.jsx","components/Trending.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Cast = ({ apiKey, movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n        if (!response.ok) {\n          throw new Error('Failed to fetch cast details');\n        }\n\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast details:', error.message);\n      }\n    };\n\n    fetchCast();\n  }, [movieId, apiKey]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {cast.map((member) => (\n        <div key={member.id}>{member.name}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './movieDetails.css';\nimport Cast from './Cast'; // Import komponentu Cast\nimport Reviews from './Reviews'; // Import komponentu Reviews\n\nconst MovieDetails = ({ apiKey, baseImageUrl }) => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [apiKey, movieId]);\n\n  return (\n    <div className=\"MovieDetails_div\">\n      {movieDetails ? (\n        <div className=\"MovieDetails_content\">\n          <h2 className=\"MovieDetails_h2\">{movieDetails.title}</h2>\n          <img\n            className=\"MovieDetails_img\"\n            src={`https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n          <p className=\"MovieDetails_p\">{movieDetails.overview}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.tagline}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.video}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.vote_average}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.vote_count}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.status}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.runtime}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.release_date}</p>\n          {/* Dodaj inne informacje o filmie, jeśli są potrzebne */}\n          \n          {/* Dodaj Cast i Reviews z odpowiednimi propsami */}\n          <Cast apiKey={apiKey} movieId={movieId} />\n          <Reviews apiKey={apiKey} movieId={movieId} />\n        </div>\n      ) : (\n        <div className=\"MovieDetails_loading\">Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Reviews = ({ apiKey, movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n\n        if (response.status !== 200) {\n          throw new Error('Failed to fetch reviews');\n        }\n\n        setReviews(response.data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [apiKey, movieId]);\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieDetails from './MovieDetails';\n\nconst Trending = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        const response = await axios.get(\n          'https://api.themoviedb.org/3/trending/movie/week?api_key=apiKey'\n        );\n\n        if (response.status === 200) {\n          setTrendingMovies(response.data.results);\n        }\n      } catch (error) {\n        console.error('Error fetching trending movies:', error.message);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      {trendingMovies.map((movie) => (\n        <div key={movie.id}>\n          <MovieDetails apiKey={process.env.REACT_APP_API_KEY} movieId={movie.id} />\n          <img\n            src={`https://image.tmdb.org/t/p/w200`}\n            alt={movie.title}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Trending;\n"],"names":["_ref","apiKey","movieId","cast","setCast","useState","useEffect","async","response","fetch","concat","ok","Error","data","json","error","console","message","fetchCast","_jsxs","children","_jsx","map","member","name","id","baseImageUrl","useParams","movieDetails","setMovieDetails","axios","status","fetchMovieDetails","className","title","src","poster_path","alt","overview","tagline","video","vote_average","vote_count","runtime","release_date","Cast","Reviews","reviews","setReviews","results","fetchReviews","length","review","author","content","Trending","trendingMovies","setTrendingMovies","fetchTrendingMovies","movie","MovieDetails","process","REACT_APP_API_KEY"],"sourceRoot":""}