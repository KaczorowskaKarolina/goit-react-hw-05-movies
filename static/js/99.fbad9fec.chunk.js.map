{"version":3,"file":"static/js/99.fbad9fec.chunk.js","mappings":"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","sources":["components/Cast.jsx","components/MovieDetails.jsx","components/Movies.jsx","components/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Cast = ({ apiKey, movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n        );\n        if (!response.ok) {\n          throw new Error('Failed to fetch cast details');\n        }\n\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching cast details:', error.message);\n      }\n    };\n\n    fetchCast();\n  }, [movieId, apiKey]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      {cast.map((member) => (\n        <div key={member.id}>{member.name}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './movieDetails.css';\nimport Cast from './Cast'; // Import komponentu Cast\nimport Reviews from './Reviews'; // Import komponentu Reviews\n\nconst MovieDetails = ({ apiKey, baseImageUrl }) => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [apiKey, movieId]);\n\n  return (\n    <div className=\"MovieDetails_div\">\n      {movieDetails ? (\n        <div className=\"MovieDetails_content\">\n          <h2 className=\"MovieDetails_h2\">{movieDetails.title}</h2>\n          <img\n            className=\"MovieDetails_img\"\n            src={`https://image.tmdb.org/t/p/w200${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n          <p className=\"MovieDetails_p\">{movieDetails.overview}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.tagline}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.video}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.vote_average}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.vote_count}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.status}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.runtime}</p>\n          <p className=\"MovieDetails_p\">{movieDetails.release_date}</p>\n          {/* Dodaj inne informacje o filmie, jeśli są potrzebne */}\n          \n          {/* Dodaj Cast i Reviews z odpowiednimi propsami */}\n          <Cast apiKey={apiKey} movieId={movieId} />\n          <Reviews apiKey={apiKey} movieId={movieId} />\n        </div>\n      ) : (\n        <div className=\"MovieDetails_loading\">Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// Movies.js\n\nimport React, { useState, useEffect, useCallback, Suspense } from 'react';\nimport axios from 'axios';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport MovieDetails from './MovieDetails';\nimport './movies.css';\n\nconst Movies = ({ apiKey }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [genres, setGenres] = useState({});\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}`\n      );\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error.message);\n    }\n  }, [apiKey, searchTerm]);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`\n        );\n        const genresMap = {};\n        response.data.genres.forEach((genre) => {\n          genresMap[genre.id] = genre.name;\n        });\n        setGenres(genresMap);\n      } catch (error) {\n        console.error('Error fetching genres:', error.message);\n      }\n    };\n\n    fetchGenres();\n    handleSearch();\n  }, [apiKey, handleSearch]);\n\n  const getGenreNames = (genreIds) => {\n    return genreIds.map((genreId) => genres[genreId]).join(', ');\n  };\n\n  return (\n    <div>\n      <header className=\"app_header\">\n        <nav className=\"app_nav\">\n          <ul className=\"app_ul\">\n            <li className=\"app_li\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"app_li\">\n              <Link to=\"/movies\">Movies</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <h2>Movies</h2>\n      {movieId && (\n        <Link to=\"/home\" className=\"back-link\" onClick={() => navigate(-1)}>\n          Back\n        </Link>\n      )}\n      <input\n        type=\"text\"\n        placeholder=\"movie title...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <p>{movie.title}</p>\n              <p>Genres: {getGenreNames(movie.genre_ids)}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      {movieId && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <MovieDetails apiKey={apiKey} movieId={movieId} />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Reviews = ({ apiKey, movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n        );\n\n        if (response.status !== 200) {\n          throw new Error('Failed to fetch reviews');\n        }\n\n        setReviews(response.data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [apiKey, movieId]);\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["_ref","apiKey","movieId","cast","setCast","useState","useEffect","async","response","fetch","concat","ok","Error","data","json","error","console","message","fetchCast","_jsxs","children","_jsx","map","member","name","id","baseImageUrl","useParams","movieDetails","setMovieDetails","axios","status","fetchMovieDetails","className","title","src","poster_path","alt","overview","tagline","video","vote_average","vote_count","runtime","release_date","Cast","Reviews","searchTerm","setSearchTerm","searchResults","setSearchResults","genres","setGenres","navigate","useNavigate","handleSearch","useCallback","results","genresMap","forEach","genre","fetchGenres","Link","to","onClick","type","placeholder","value","onChange","e","target","movie","genreIds","genre_ids","genreId","join","Suspense","fallback","MovieDetails","reviews","setReviews","fetchReviews","length","review","author","content"],"sourceRoot":""}