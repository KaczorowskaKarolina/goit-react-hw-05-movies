{"version":3,"file":"static/js/681.8089d2b8.chunk.js","mappings":"oLAEA,MAkCA,EAlCgBA,IAAkB,IAAjB,QAAEC,GAASD,EAC1B,MAAOE,EAASC,IAAcC,EAAAA,EAAAA,UAAS,IAuBvC,OArBAC,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACE,MAAMC,QAAiBC,MAAM,sCAADC,OACYR,EAAO,+BAG/C,IAAKM,EAASG,GACZ,MAAM,IAAIC,MAAM,2BAGlB,MAAMC,QAAaL,EAASM,OAC5BV,EAAWS,EAAKE,QAGlB,CAFE,MAAOC,GACPC,QAAQD,MAAM,0BAA2BA,EAAME,QACjD,GAGFC,EAAc,GACb,CAACjB,KAGFkB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACHlB,EAAQoB,KAAKC,IACZF,EAAAA,EAAAA,KAAA,OAAAD,SAAsBG,EAAOC,SAAnBD,EAAOE,QAEf,C","sources":["components/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?REACT_APP_API_KEY`\n        );\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch reviews');\n        }\n\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.map((review) => (\n        <div key={review.id}>{review.content}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["_ref","movieId","reviews","setReviews","useState","useEffect","async","response","fetch","concat","ok","Error","data","json","results","error","console","message","fetchReviews","_jsxs","children","_jsx","map","review","content","id"],"sourceRoot":""}