{"version":3,"file":"static/js/99.cefe7549.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx","components/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './movieDetails.css'; \n\nconst MovieDetails = ({ apiKey, baseImageUrl }) => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n  \n        );\n\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [apiKey, movieId]);\n\n  return (\n    <div className=\"MovieDetails_div\">\n      {movieDetails ? (\n        <div className=\"MovieDetails_content\">\n          <h2 className=\"MovieDetails_h2\">{movieDetails.title}</h2>\n          <img className=\"MovieDetails_img\" src={`${baseImageUrl}${movieDetails.poster_path}`} alt={movieDetails.title} />\n          <p className=\"MovieDetails_p\">{movieDetails.overview}</p>\n          {/* Dodaj inne informacje o filmie, jeśli są potrzebne */}\n        </div>\n      ) : (\n        <div className=\"MovieDetails_loading\">Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","// Movies.js\n\nimport React, { useState, useEffect, useCallback, Suspense } from 'react';\nimport axios from 'axios';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport MovieDetails from './MovieDetails';\nimport './movies.css';\n\nconst Movies = ({ apiKey }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [genres, setGenres] = useState({});\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}`\n      );\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error.message);\n    }\n  }, [apiKey, searchTerm]);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`\n        );\n        const genresMap = {};\n        response.data.genres.forEach((genre) => {\n          genresMap[genre.id] = genre.name;\n        });\n        setGenres(genresMap);\n      } catch (error) {\n        console.error('Error fetching genres:', error.message);\n      }\n    };\n\n    fetchGenres();\n    handleSearch();\n  }, [apiKey, handleSearch]);\n\n  const getGenreNames = (genreIds) => {\n    return genreIds.map((genreId) => genres[genreId]).join(', ');\n  };\n\n  return (\n    <div>\n      <header className=\"app_header\">\n        <nav className=\"app_nav\">\n          <ul className=\"app_ul\">\n            <li className=\"app_li\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"app_li\">\n              <Link to=\"/movies\">Movies</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <h2>Movies</h2>\n      {movieId && (\n        <Link to=\"/home\" className=\"back-link\" onClick={() => navigate(-1)}>\n          Back\n        </Link>\n      )}\n      <input\n        type=\"text\"\n        placeholder=\"movie title...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <p>{movie.overview}</p>\n              <p>Genres: {getGenreNames(movie.genre_ids)}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      {movieId && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <MovieDetails apiKey={apiKey} movieId={movieId} />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","apiKey","baseImageUrl","movieId","useParams","movieDetails","setMovieDetails","useState","useEffect","async","response","axios","concat","status","data","error","console","message","fetchMovieDetails","_jsx","className","children","_jsxs","title","src","poster_path","alt","overview","searchTerm","setSearchTerm","searchResults","setSearchResults","genres","setGenres","navigate","useNavigate","handleSearch","useCallback","results","genresMap","forEach","genre","id","name","fetchGenres","Link","to","onClick","type","placeholder","value","onChange","e","target","map","movie","genreIds","genre_ids","genreId","join","Suspense","fallback","MovieDetails"],"sourceRoot":""}