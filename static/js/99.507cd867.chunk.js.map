{"version":3,"file":"static/js/99.507cd867.chunk.js","mappings":"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","sources":["components/MovieDetails.jsx","components/Movies.jsx"],"sourcesContent":["// MovieDetails.jsx\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst MovieDetails = ({ apiKey, baseImageUrl }) => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n        );\n\n        if (response.status === 200) {\n          setMovieDetails(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [apiKey, movieId]);\n\n  return (\n    <div>\n      {movieDetails ? (\n        <div>\n          <h2>{movieDetails.title}</h2>\n          <img src={`${baseImageUrl}${movieDetails.poster_path}`} alt={movieDetails.title} />\n          <p>{movieDetails.overview}</p>\n          {/* Dodaj inne informacje o filmie, jeśli są potrzebne */}\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useState, useEffect, useCallback, Suspense } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport MovieDetails from './MovieDetails';\nimport './movies.css';\n\nconst Movies = ({ apiKey }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [genres, setGenres] = useState({}); // Define genres state\n\n  const { movieId } = useParams();\n\n  const handleSearch = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}`\n      );\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error searching movies:', error.message);\n    }\n  }, [apiKey, searchTerm]);\n\n  useEffect(() => {\n    const fetchGenres = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}`\n        );\n        const genresMap = {};\n        response.data.genres.forEach((genre) => {\n          genresMap[genre.id] = genre.name;\n        });\n        setGenres(genresMap);\n      } catch (error) {\n        console.error('Error fetching genres:', error.message);\n      }\n    };\n\n    fetchGenres(); // Move fetchGenres inside the useEffect callback\n    handleSearch();\n  }, [apiKey, handleSearch]); // Use correct dependency array\n\n  const getGenreNames = (genreIds) => {\n    return genreIds.map((genreId) => genres[genreId]).join(', ');\n  };\n\n  return (\n  <div>\n    <h2>Movies</h2>\n    <input\n      type=\"text\"\n      placeholder=\"movie title...\"\n      value={searchTerm}\n      onChange={(e) => setSearchTerm(e.target.value)}\n    />\n    <button onClick={handleSearch}>Search</button>\n    <ul>\n      {searchResults.map((movie) => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`}>\n            <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title} />\n            <p>{movie.overview}</p>\n            <p>Genres: {getGenreNames(movie.genre_ids)}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n\n    {movieId && (\n      <Suspense fallback={<div>Loading...</div>}>\n        <MovieDetails apiKey={apiKey} movieId={movieId} />\n      </Suspense>\n    )}\n  </div>\n);\n};\n\nexport default Movies;\n"],"names":["_ref","apiKey","baseImageUrl","movieId","useParams","movieDetails","setMovieDetails","useState","useEffect","async","response","axios","concat","status","data","error","console","message","fetchMovieDetails","_jsx","children","_jsxs","title","src","poster_path","alt","overview","searchTerm","setSearchTerm","searchResults","setSearchResults","genres","setGenres","handleSearch","useCallback","results","genresMap","forEach","genre","id","name","fetchGenres","type","placeholder","value","onChange","e","target","onClick","map","movie","Link","to","genreIds","genre_ids","genreId","join","Suspense","fallback","MovieDetails"],"sourceRoot":""}